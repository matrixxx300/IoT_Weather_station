/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.4 */

#ifndef PB_PROT_PB_H_INCLUDED
#define PB_PROT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _AtmosphericConditions {
    double temperature;
    double pressure;
    double humidity;
    double gas;
} AtmosphericConditions;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define AtmosphericConditions_init_default       {0, 0, 0, 0}
#define AtmosphericConditions_init_zero          {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define AtmosphericConditions_temperature_tag    1
#define AtmosphericConditions_pressure_tag       2
#define AtmosphericConditions_humidity_tag       3
#define AtmosphericConditions_gas_tag            4

/* Struct field encoding specification for nanopb */
#define AtmosphericConditions_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, DOUBLE,   temperature,       1) \
X(a, STATIC,   SINGULAR, DOUBLE,   pressure,          2) \
X(a, STATIC,   SINGULAR, DOUBLE,   humidity,          3) \
X(a, STATIC,   SINGULAR, DOUBLE,   gas,               4)
#define AtmosphericConditions_CALLBACK NULL
#define AtmosphericConditions_DEFAULT NULL

extern const pb_msgdesc_t AtmosphericConditions_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define AtmosphericConditions_fields &AtmosphericConditions_msg

/* Maximum encoded size of messages (where known) */
#define AtmosphericConditions_size               36

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
